{"version":3,"sources":["constants/ActionTypes.js","Components/Controls.js","actions/index.js","Components/ListItem.js","Components/Table.js","Components/TableAdd.js","App.js","reportWebVitals.js","reducers/dataTodos.js","reducers/displayTableAdd.js","reducers/displayUpdate.js","reducers/addItem.js","reducers/quickFilterItem.js","reducers/index.js","index.js"],"names":["DATA_TODOS","TOGGLE_TABLE_ADD","CLOSE_TABLE_ADD","TOGGLE_UPDATE","CLOSE_UPDATE","ADD_ITEM","UPDATE_STATUS","DELETE_ITEM","UPDATE_ITEM","Controls","onToggleForm","toggleTableAdd","props","generateID","Date","now","this","displayTableAdd","className","onClick","type","placeholder","Component","connect","state","dispatch","types","ListItem","onUpdateItem","displayUpdate","onCloseUpdateItem","id","name","onUpdateStatus","listItem","onDeleteItem","e","onDisplayUpdate","setState","onChange","checkid","parseInt","target","getAttribute","value","renderStatus","status","renderNameItem","byID","autoFocus","keyword","stt","actions","Table","onQuickFilter","onClear","fieldName","fieldStatus","dataTodos","filter","item","index","toLowerCase","indexOf","toLocaleLowerCase","elemListItem","map","TableAdd","onReset","onAdd","preventDefault","onAddItem","alert","console","log","valueAdd","closeTableAdd","addItem","method","checked","htmlFor","itemAdd","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","JSON","parse","localStorage","getItem","initialState","myReducer","action","newItem","push","setItem","stringify","stateMap","stateFilter","stateMapUpdate","newState","newState1","combineReducers","quickFilterItem","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab468543.chunk.js","sourcesContent":["export const DATA_TODOS = \"DATA_TODOS\";\r\nexport const TOGGLE_TABLE_ADD = \"TOGGLE_TABLE_ADD\";\r\nexport const CLOSE_TABLE_ADD = \"CLOSE_TABLE_ADD\";\r\nexport const TOGGLE_UPDATE = \"TOGGLE_UPDATE\";\r\nexport const CLOSE_UPDATE = \"CLOSE_UPDATE\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const UPDATE_ITEM = \"UPDATE_ITEM\";\r\nexport const QUICK_FILTER_ITEM = \"QUICK_FILTER_ITEM\";","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\nclass Controls extends Component {\r\n  onToggleForm = () => {\r\n    const {toggleTableAdd} = this.props;\r\n    // this.props.onToggleTableAdd();\r\n    // this.props.onToggleTableAdd();\r\n    toggleTableAdd()\r\n  }\r\n  generateID = () => {\r\n    return Date.now();\r\n  }\r\n    render() {\r\n      const {toggleTableAdd, displayTableAdd} = this.props;\r\n      // console.log(toggleTableAdd);\r\n      // console.log(displayTableAdd);\r\n        return (\r\n            <section className=\"option\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12 col-sm-12\">\r\n                        <button \r\n                          className=\"btn btn---primary btn--blue btn--search \"\r\n                          onClick={this.onToggleForm}\r\n                        >\r\n                          <i className=\"fas fa-plus-circle\" />\r\n                          <span className=\"btn__name\">\r\n                            Thêm công việc\r\n                          </span>\r\n                        </button>\r\n                        <div className=\"option__search\">\r\n                          <input type=\"text\" className=\"option__search-input\"\r\n                           placeholder=\"Nhập từ khóa tìm kiếm...\" />\r\n                          <button className=\"btn btn--blue btn--primary btn--search\">\r\n                            <i className=\"fas fa-search\" />\r\n                            <span className=\"btn__name\">\r\n                              Tìm kiếm\r\n                            </span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    displayTableAdd : state.displayTableAdd\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    toggleTableAdd: () => {\r\n      dispatch(actions.toggleTableAdd());\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);","import * as types from \"../constants/ActionTypes\";\r\n\r\nexport const listItem = () => {\r\n    return {\r\n        type: types.DATA_TODOS\r\n    }\r\n}\r\nexport const toggleTableAdd = () => {\r\n    return {\r\n        type: types.TOGGLE_TABLE_ADD\r\n    }\r\n}\r\nexport const closeTableAdd = () => {\r\n    return {\r\n        type: types.CLOSE_TABLE_ADD\r\n    }\r\n}\r\nexport const toggleUpdate = (id) => {\r\n    return {\r\n        type: types.TOGGLE_UPDATE,\r\n        id\r\n    }\r\n}\r\nexport const closeUpdate = (id) => {\r\n    return {\r\n        type: types.CLOSE_UPDATE,\r\n        id\r\n    }\r\n}\r\nexport const addItem = (addItem) => {\r\n    return {\r\n        type: types.ADD_ITEM,\r\n        addItem,\r\n    }\r\n}\r\nexport const updateStatus = (id) => {\r\n    return {\r\n        type: types.UPDATE_STATUS,\r\n        id,\r\n    }\r\n}\r\nexport const deleteItem = (id) => {\r\n    return {\r\n        type: types.DELETE_ITEM,\r\n        id\r\n    }\r\n}\r\nexport const updateItem = (id, name ) => {\r\n    return {\r\n        type: types.UPDATE_ITEM,\r\n        id,\r\n        name    \r\n    }\r\n}\r\nexport const quickFilterItem = (filter ) => {\r\n    return {\r\n        type: types.QUICK_FILTER_ITEM,\r\n        filter   \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\nclass ListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      keyword: \"\"\r\n    }\r\n  }\r\n  onUpdateItem = () => {\r\n    const {onUpdateItem, displayUpdate, onCloseUpdateItem} = this.props;\r\n    const {id, name} = this.state;\r\n    // console.log(displayUpdate);\r\n    onUpdateItem(id, name, displayUpdate);\r\n    // console.log(this.state)\r\n    onCloseUpdateItem(false);\r\n  }\r\n  onUpdateStatus = () => {\r\n    const {id} = this.props.listItem;\r\n    // console.log(\"Click\")\r\n    const {onUpdateStatus} = this.props;\r\n    // console.log(onUpdateStatus)\r\n    onUpdateStatus(id);\r\n  }\r\n  onDeleteItem = () => {\r\n    const {id} = this.props.listItem;\r\n    const {onDeleteItem} = this.props;\r\n    // console.log(\"click\")\r\n    onDeleteItem(id);\r\n    }\r\n  onCloseUpdateItem = () => {\r\n    const {displayUpdate} = this.props;\r\n    const {onCloseUpdateItem} = this.props;\r\n    onCloseUpdateItem(displayUpdate)\r\n  }\r\n    displayUpdate = (e) => {\r\n      // console.log(e.target.value)\r\n      const {id, name} = this.props.listItem;\r\n      const {onDisplayUpdate, listItem} = this.props;\r\n      this.setState({\r\n        id: id,\r\n        name: listItem.name\r\n      })\r\n      // console.log(listItem.name);\r\n      onDisplayUpdate(id)\r\n    }\r\n    onChange = (e) => {\r\n      const checkid = parseInt(e.target.getAttribute(\"checkid\"))\r\n      this.setState({\r\n        id: checkid,\r\n        name :  e.target.value\r\n      })\r\n    }\r\n  renderStatus = () => {\r\n    const { status } = this.props.listItem;\r\n    if (status === \"complete\") {\r\n      return (\r\n        <span \r\n          className=\"btn btn--status btn--complete\"\r\n          onClick={this.onUpdateStatus}\r\n          >\r\n          <span \r\n            className=\"btn-pc\">\r\n            Đã hoàn thành\r\n           </span>\r\n          <span className=\"btn-mobile\">\r\n          </span>\r\n        </span>\r\n      )\r\n    }\r\n    else if (status === \"notComplete\") {\r\n      return (\r\n        <span \r\n          className=\"btn btn--not-complete\"\r\n          onClick={this.onUpdateStatus}\r\n          \r\n          >\r\n                              Chưa hoàn thành\r\n                            </span>\r\n      )\r\n    }\r\n  }\r\n  renderNameItem = () => {\r\n    const { displayUpdate, byID, listItem } = this.props;\r\n    const { name , id } = listItem;\r\n    \r\n    // console.log(byID)\r\n    if (id === byID) {\r\n      // console.log(name)\r\n      if (displayUpdate) {\r\n        return (\r\n          <div className=\"table__repair-input\">\r\n              <div className=\"repair-input-box\">\r\n                <input \r\n                  type=\"text\" \r\n                  className=\"repair-input\" \r\n                  name=\"repair\"\r\n                  checkid={id}\r\n                  value={this.state.name}\r\n                  onChange={this.onChange}\r\n                  autoFocus\r\n                   />\r\n                <span \r\n                  className=\"repair-input-close\"\r\n                  onClick={this.onCloseUpdateItem}\r\n                >\r\n                  <i className=\"fas fa-times\" />\r\n                </span>\r\n              </div>\r\n              <button \r\n                className=\"btn btn--primary\"\r\n                onClick={() => this.onUpdateItem()}\r\n                >Cập nhật</button>\r\n            </div>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n            <p className=\"table__text \">\r\n                {name}\r\n            </p>\r\n        )\r\n      }\r\n      }\r\n      else {\r\n        return (\r\n            <p className=\"table__text \">\r\n                {name}\r\n            </p>\r\n        )\r\n      }\r\n   \r\n  }\r\n  render() {\r\n    const { listItem, stt, displayUpdate } = this.props;\r\n    const { id, name, status } = listItem;\r\n    // console.log(status)\r\n    // console.log(displayUpdate)\r\n    // console.log(this.state)\r\n\r\n\r\n    return (\r\n      <tr className= {status === \"complete\" ? \"table__item complete\" : \"table__item\" }>\r\n        <td className=\"table__stt\">\r\n          {stt}\r\n        </td>\r\n        <td \r\n          className=\"table__name\"\r\n          \r\n          >\r\n          {\r\n            this.renderNameItem()\r\n          }\r\n          \r\n        </td>\r\n        <td className=\"table__status\">\r\n          {\r\n            this.renderStatus()\r\n          }\r\n\r\n        </td>\r\n        <td className=\"table__actions\">\r\n          <div className=\"table__actions-btn\">\r\n            <button \r\n              className=\"btn  btn--repair\"\r\n              onClick={(e) => this.displayUpdate(e)}\r\n              value={id}\r\n              >\r\n              <i className=\"fas fa-tools\" />\r\n              <span className=\"btn-mobile\">\r\n                Sửa\r\n                                </span>\r\n            </button>\r\n            <button \r\n              className=\"btn  btn--delete\"\r\n              onClick={(e) => this.onDeleteItem(e)}\r\n              >\r\n              <i className=\"fas fa-trash-alt\" />\r\n              <span className=\"btn-mobile\">\r\n                Xóa\r\n                                </span>\r\n            </button>\r\n          </div>\r\n          <div className=\"table__actions-btn none\">\r\n            <button className=\"btn  btn--update\">\r\n              <i className=\"fas fa-edit\" />\r\n              <span className=\"btn-mobile\">\r\n                Cập nhật\r\n                                </span>\r\n            </button>\r\n            <button className=\"btn  btn--back\">\r\n              <i className=\"fas fa-caret-square-left\" />\r\n              <span className=\"btn-mobile\">\r\n                Trở lại\r\n                                </span>\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state)\r\n  return {\r\n    byID: state.displayUpdate.byID,\r\n    displayUpdate: state.displayUpdate.status\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onUpdateStatus: (id) => {\r\n      dispatch(actions.updateStatus(id))\r\n    },\r\n    onDeleteItem: (id) => {\r\n      dispatch(actions.deleteItem(id));\r\n    },\r\n    onDisplayUpdate: (id) => {\r\n      dispatch(actions.toggleUpdate(id))\r\n    },\r\n    onUpdateItem: (id, name ) => {\r\n      dispatch(actions.updateItem(id, name ))\r\n    },\r\n    onCloseUpdateItem: () => {\r\n      dispatch(actions.closeUpdate())\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);\r\n","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fieldName: \"\",\r\n      fieldStatus: -1\r\n    }\r\n  }\r\n  onQuickFilter = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n  onClear = () => {\r\n    this.setState({\r\n      fieldName: \"\",\r\n      fieldStatus: -1\r\n    })\r\n  }\r\n    render() {\r\n\r\n      // console.log(this.props.dataTodos);\r\n      let {dataTodos, displayTableAdd, toggleTableAdd} = this.props;\r\n      const {fieldName, fieldStatus} = this.state;\r\n      // console.log(dataTodos)\r\n      if (fieldName) {\r\n        dataTodos = dataTodos.filter((item, index) => {\r\n          return item.name.toLowerCase().indexOf(fieldName.toLocaleLowerCase()) !== -1;\r\n        })\r\n      }\r\n      dataTodos = dataTodos.filter((item, index) => {\r\n        // let status = item.status === \"complete\" ? 1 : item.status === \"notComplete\" ? 0 : -1;\r\n        // return status !== parseInt(fieldStatus);\r\n        if (parseInt(fieldStatus) === -1) {\r\n          return item;\r\n        }\r\n        else {\r\n        let status = item.status === \"complete\" ? 1 : item.status === \"notComplete\" ? 0 : -1;\r\n          return status !== parseInt(fieldStatus);\r\n        }\r\n      })\r\n\r\n        let elemListItem = dataTodos.map((item, index) => {\r\n          return <ListItem \r\n                    stt={index + 1}\r\n                    key={index}\r\n                    listItem={item}\r\n                    >\r\n                    </ListItem>\r\n        });\r\n         \r\n\r\n      \r\n        return (\r\n            <section className=\"tables\">\r\n                    <table className=\"table\">\r\n                      <thead className=\"table__header\">\r\n                        <tr className=\"table__item\">\r\n                          <td className=\"table__stt\">\r\n                            STT\r\n                          </td>\r\n                          <td className=\"table__name\">\r\n                            <span className=\"table__text\">\r\n                              Tên công việc\r\n                            </span>\r\n                            <div className=\"table__icon-box\">\r\n                              <span className=\"table__icon\">\r\n                                <i className=\"fas fa-sort\" />\r\n                              </span>\r\n                              <span className=\"table__icon\">\r\n                                <i className=\"fas fa-sort-amount-down\" />\r\n                              </span>\r\n                              <span className=\"table__icon\">\r\n                                <i className=\"fas fa-sort-amount-up\" />\r\n                              </span>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"table__status\">\r\n                            <span className=\"table__text\">\r\n                              Trạng thái\r\n                            </span>\r\n                            <div className=\"table__icon-box\">\r\n                              <span className=\"table__icon\">\r\n                                <i className=\"fas fa-sort\" />\r\n                              </span>\r\n                              <span className=\"table__icon\">\r\n                                <i className=\"fas fa-sort-amount-down\" />\r\n                              </span>\r\n                              <span className=\"table__icon\">\r\n                                <i className=\"fas fa-sort-amount-up\" />\r\n                              </span>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"table__actions\">\r\n                            Thao tác\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"table__filter\">\r\n                          <td className=\"table__stt\">\r\n                          </td>\r\n                          <td className=\"table__filter-name table__name\">\r\n                            <input \r\n                              type=\"text\" \r\n                              className=\"table__quick-search\"\r\n                              name=\"fieldName\" \r\n                              placeholder=\"Tìm kiếm nhanh...\" \r\n                              onChange={this.onQuickFilter}\r\n                              value={fieldName}\r\n                              />\r\n                            <span \r\n                              className=\"table__quick-search-reset\"\r\n                              onClick={this.onClear}\r\n                              >\r\n                              <i className=\"fas fa-times\" />\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"table__status\">\r\n                            <select \r\n                              name=\"status-filter\" \r\n                              className=\"status-filter\"\r\n                              name=\"fieldStatus\"\r\n                              onChange={this.onQuickFilter}\r\n                              >\r\n                              <option value={-1} className=\"status-filter__options\">\r\n                                Tất cả\r\n                              </option>\r\n                              <option value={-0} className=\"status-filter__options\">\r\n                                Đã hoàn thành\r\n                              </option>\r\n                              <option value={1} className=\"status-filter__options\">Chưa hoàn\r\n                                thành</option>\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"table__actions\">\r\n                          </td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"table__body\">\r\n                       {elemListItem}\r\n                        \r\n                      </tbody>\r\n                    </table>\r\n                  </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataTodos: state.dataTodos\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass TableAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      status: \"notComplete\"\r\n    }\r\n  }\r\n \r\n  onReset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: \"notComplete\"\r\n    })\r\n  }\r\n  onAdd = (e) => {\r\n    e.preventDefault();\r\n    const {name, status} = this.state;\r\n    const {onAddItem} = this.props;\r\n    if (name === \"\") {\r\n      alert(\"Vui lòng nhập tên công việc!!\")\r\n    }\r\n    else {\r\n      console.log(this.state)\r\n      onAddItem(this.state);\r\n      this.onReset();\r\n    }\r\n  }\r\n  valueAdd = (e) => {\r\n    // const {name, status} = this.state;\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    // console.log(value)\r\n    this.setState (\r\n        {\r\n          [name] : value\r\n        }\r\n      )\r\n      \r\n  }\r\n    render() {\r\n      // console.log(this.props.displayTableAdd)\r\n      // console.log(this.state)\r\n      const {status, name} = this.state;\r\n      const { displayTableAdd, closeTableAdd, addItem } = this.props;\r\n        return (\r\n            <div className=\"add-box\">\r\n            <div className=\"add\">\r\n              <div className=\"add__header\">\r\n                <span className=\"add__header-text\">\r\n                  THÊM CÔNG VIỆC\r\n                </span>\r\n                <span \r\n                  className=\"add__header-btn-close\"\r\n                  onClick={() => closeTableAdd()}\r\n                  >\r\n                  <i className=\"fas fa-arrow-alt-circle-left\" />\r\n                </span>\r\n              </div>\r\n              <div className=\"add__menu\">\r\n                <form method=\"POST\" className=\"add__menu-form\">\r\n                  <div className=\"add__menu-input-box\">\r\n                    <label className=\"add__menu-text\">\r\n                      Tên công việc :  \r\n                    </label>\r\n                    <input \r\n                      name=\"name\"\r\n                      type=\"text\" \r\n                      value={name}\r\n                      className=\"add__menu-input\"\r\n                      onChange={this.valueAdd}\r\n                      autoFocus\r\n                       />\r\n                  </div>\r\n                  <div className=\"add__menu-radio-box\">\r\n                    <input \r\n                      type=\"radio\" \r\n                      id=\"notComplete\" \r\n                      name=\"status\" \r\n                      value=\"notComplete\" \r\n                      className=\"add__menu-radio\"\r\n                      onChange={this.valueAdd}\r\n                      checked={(status === \"notComplete\") ? true : false}\r\n                       />\r\n                    <label htmlFor=\"notComplete\">Chưa hoàn thành</label>\r\n                    <input \r\n                      type=\"radio\" \r\n                      id=\"complete\" \r\n                      name=\"status\" \r\n                      value=\"complete\"\r\n                      className=\"add__menu-radio\"\r\n                      onChange={this.valueAdd}\r\n                      checked={(status === \"complete\") ? true : false}\r\n                       />\r\n                    <label htmlFor=\"complete\">Đã hoàn thành</label>\r\n                  </div>\r\n                  <div className=\"add__menu-btn-box\">\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn--primary\"\r\n                        onClick={this.onAdd}\r\n                        >Thêm</button>\r\n                    <button \r\n                      type=\"reset\" \r\n                      className=\"btn btn--delete\"\r\n                      onClick={this.onReset}\r\n                      >Reset</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    displayTableAdd: state.displayTableAdd,\r\n    addItem: state.addItem\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    closeTableAdd : () => {\r\n    dispatch(actions.closeTableAdd());\r\n  },\r\n    onAddItem : (itemAdd) => {\r\n      dispatch(actions.addItem(itemAdd));\r\n    }\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableAdd);\r\n// export default TableAdd;","import React, { Component } from 'react';\nimport Controls from './Components/Controls';\nimport Table from './Components/Table';\nimport TableAdd from './Components/TableAdd';\nimport { connect } from \"react-redux\";\n// import demo from \"./demoredux/demo\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n  }\n\n  \n  render() {\n    const {displayTableAdd} = this.props;\n    // console.log(this.props.displayTableAdd)\n    return (\n     \n        <div>\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-lg-12 col-sm-12\">\n        <header className=\"header\">\n          <h2 className=\"header__text\">\n            Quản lý công việc\n          </h2>\n        </header>\n      </div>\n    </div>\n  </div>\n  <main className=\"main\">\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className={displayTableAdd ? \" col-lg-3 col-sm-12\" : \" col-lg-3 col-sm-12 display-none\"}>\n          <TableAdd></TableAdd>\n        </div>\n        <div className={displayTableAdd ? \" col-lg-9 col-sm-12\" : \"col-lg-12 col-sm-12\" } >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-sm-12\">\n                <div className=\"right\">\n                  <Controls></Controls>\n                  <Table></Table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n  </div>\n\n\n      \n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    displayTableAdd: state.displayTableAdd,\n    \n  }\n}\nconst mapDispatchToProps = (dispatch, props) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nconst generateID = () => {\r\n    return Date.now();\r\n};\r\nvar data = JSON.parse(localStorage.getItem(\"data\"));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.DATA_TODOS:\r\n            return state;\r\n        case types.ADD_ITEM:\r\n            // console.log(state)\r\n            const newItem = {\r\n                id: generateID(),\r\n                name : action.addItem.name,\r\n                status: action.addItem.status\r\n            }\r\n            state.push(newItem);\r\n            localStorage.setItem(\"data\", JSON.stringify(state));\r\n            console.log(state);\r\n            return [...state];\r\n        case types.UPDATE_STATUS:\r\n            // console.log(action)\r\n            const stateMap = state.map((item, index) => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        status: (item.status === \"complete\") ? \"notComplete\" : \"complete\"\r\n                    }\r\n                   \r\n                }\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n            \r\n            localStorage.setItem(\"data\", JSON.stringify(stateMap));\r\n            return stateMap;\r\n\r\n        case types.DELETE_ITEM: \r\n            console.log(action)\r\n            const stateFilter = state.filter(item => {\r\n                return item.id !== action.id\r\n            })\r\n            \r\n            // console.log(stateFilter);\r\n            localStorage.setItem(\"data\", JSON.stringify(stateFilter));\r\n            return stateFilter;\r\n            case types.UPDATE_ITEM:\r\n                // console.log(action)\r\n                // console.log(state)\r\n                const stateMapUpdate = state.map(item => {\r\n                    if (item.id === action.id) {\r\n                       return {\r\n                           ...item,\r\n                           name: action.name\r\n                       }\r\n                    }\r\n                    else {\r\n                        return item\r\n                    }\r\n                    \r\n                })\r\n            //     console.log(state)\r\n            //    console.log(stateMapUpdate)\r\n            localStorage.setItem(\"data\", JSON.stringify(stateMapUpdate));\r\n            return stateMapUpdate;\r\n        default: return state\r\n    }\r\n    return state;\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\nvar initialState = false;\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.TOGGLE_TABLE_ADD:\r\n            return !state;\r\n        case types.CLOSE_TABLE_ADD: \r\n            state = false;\r\n            return state;\r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\nvar data = JSON.parse(localStorage.getItem(\"data\"));\r\nvar initialState = {\r\n    byID: null,\r\n    status: false \r\n}\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.TOGGLE_UPDATE:\r\n            // console.log(action)\r\n            // console.log(state.displayUpdate)\r\n            const newState = {\r\n                ...state,\r\n                byID: action.id,\r\n                status: true\r\n\r\n            }\r\n            // console.log(state)\r\n            // console.log(newState)\r\n            return newState;\r\n        case types.CLOSE_UPDATE:\r\n            \r\n            const newState1 = {\r\n                ...state,\r\n                status: false\r\n            }\r\n            // console.log(state)\r\n            // console.log(newState1)\r\n            // return state;\r\n            return newState1;\r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = {\r\n    name: \"\",\r\n    status: \"notComplete\"\r\n}\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.ADD_ITEM:\r\n            // console.log(action.addItem);\r\n            \r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\nvar initialState = '';\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.TOGGLE_UPDATE:\r\n            \r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import { combineReducers } from \"redux\";\r\nimport dataTodos from \"./dataTodos\";\r\nimport displayTableAdd from \"./displayTableAdd\";\r\nimport displayUpdate from \"./displayUpdate\";\r\nimport addItem from \"./addItem\";\r\nimport quickFilterItem from \"./quickFilterItem\";\r\nconst myReducer = combineReducers({\r\n    dataTodos,\r\n    displayTableAdd,\r\n    addItem,\r\n    displayUpdate,\r\n    quickFilterItem\r\n});\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//Store\nimport {createStore } from \"redux\";\nimport myReducer  from \"./reducers/index\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(myReducer);\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}