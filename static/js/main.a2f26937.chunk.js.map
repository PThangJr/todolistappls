{"version":3,"sources":["constants/ActionTypes.js","Components/Controls.js","actions/index.js","Components/ListItem.js","Components/Table.js","Components/TableAdd.js","App.js","reportWebVitals.js","reducers/dataTodos.js","reducers/displayTableAdd.js","reducers/displayUpdate.js","reducers/addItem.js","reducers/quickFilterItem.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["DATA_TODOS","TOGGLE_TABLE_ADD","CLOSE_TABLE_ADD","TOGGLE_UPDATE","CLOSE_UPDATE","ADD_ITEM","UPDATE_STATUS","DELETE_ITEM","UPDATE_ITEM","SEARCH","SORT","Controls","props","onToggleForm","toggleTableAdd","onChangeSearch","e","setState","keyword","target","value","onSearch","state","className","onClick","this","type","name","placeholder","onChange","Component","connect","displayTableAdd","dispatch","types","actions","ListItem","onUpdateItem","displayUpdate","onCloseUpdateItem","id","onUpdateStatus","listItem","onDeleteItem","onDisplayUpdate","checkid","parseInt","getAttribute","renderStatus","status","renderNameItem","byID","autoFocus","stt","Table","onQuickFilter","onClear","fieldName","fieldStatus","onHandleSort","by","removeAccents","str","normalize","replace","sort","dataTodos","filter","item","index","toLowerCase","trim","indexOf","sortName","a","b","toUpperCase","sortStatus","elemListItem","map","search","TableAdd","onReset","onAdd","preventDefault","onAddItem","alert","console","log","valueAdd","closeTableAdd","method","checked","htmlFor","addItem","itemAdd","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","generateID","Date","now","data","JSON","parse","localStorage","getItem","initialState","myReducer","action","newItem","push","setItem","stringify","stateMap","stateFilter","stateMapUpdate","newState","newState1","combineReducers","quickFilterItem","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"uNAAaA,EAAa,aACbC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAe,eACfC,EAAW,WACXC,EAAgB,gBAChBC,EAAc,cACdC,EAAc,cAEdC,EAAS,SACTC,EAAO,OCRdC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,YAIbC,EAHyB,EAAKF,MAAvBE,mBARU,EAanBC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZC,QAASF,EAAEG,OAAOC,SAfH,EAkBnBC,SAAW,WAAO,IACTH,EAAW,EAAKI,MAAhBJ,SAEPG,EADmB,EAAKT,MAAjBS,UACEH,IAnBT,EAAKI,MAAQ,CACXJ,QAAS,IAHM,E,qDA4Bb,OACI,yBAASK,UAAU,SAAnB,SACQ,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,yBACEA,UAAU,2CACVC,QAASC,KAAKZ,aAFhB,UAIE,mBAAGU,UAAU,uBACb,sBAAMA,UAAU,YAAhB,8CAIF,sBAAKA,UAAU,iBAAf,UACE,uBACEG,KAAK,OACLC,KAAK,cACLJ,UAAU,uBACVK,YAAY,oEACZC,SAAUJ,KAAKV,iBAEjB,yBACEQ,UAAU,yCACVC,QAASC,KAAKJ,SAFhB,UAIE,mBAAGE,UAAU,kBACb,sBAAMA,UAAU,YAAhB,sD,GAvDLO,aAiFRC,eAfS,SAACT,GACvB,MAAO,CACLU,gBAAkBV,EAAMU,oBAGD,SAACC,EAAUrB,GACpC,MAAO,CACLE,eAAgB,WACdmB,ECrEK,CACHP,KAAMQ,KDsEVb,SAAU,SAACH,GACTe,ECpBgB,SAACf,GACnB,MAAO,CACHQ,KAAMQ,EACNhB,WDiBOiB,CAAejB,QAIfa,CAA6CpB,G,OEjFtDyB,E,kDACJ,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAORyB,aAAe,WAAO,IAAD,EACsC,EAAKzB,MAAvDyB,EADY,EACZA,aAAcC,EADF,EACEA,cAAeC,EADjB,EACiBA,kBADjB,EAEA,EAAKjB,MAExBe,EAJmB,EAEZG,GAFY,EAERb,KAEYW,GAEvBC,GAAkB,IAdD,EAgBnBE,eAAiB,WAAO,IACfD,EAAM,EAAK5B,MAAM8B,SAAjBF,IAIPC,EAFyB,EAAK7B,MAAvB6B,gBAEQD,IArBE,EAuBnBG,aAAe,WAAO,IACbH,EAAM,EAAK5B,MAAM8B,SAAjBF,IAGPG,EAFuB,EAAK/B,MAArB+B,cAEMH,IA3BI,EA6BnBD,kBAAoB,WAAO,IAClBD,EAAiB,EAAK1B,MAAtB0B,eAEPC,EAD4B,EAAK3B,MAA1B2B,mBACWD,IAhCD,EAkCjBA,cAAgB,SAACtB,GAAM,IAEdwB,EAAM,EAAK5B,MAAM8B,SAAjBF,GAFc,EAGe,EAAK5B,MAAlCgC,EAHc,EAGdA,gBAAiBF,EAHH,EAGGA,SACxB,EAAKzB,SAAS,CACZuB,GAAIA,EACJb,KAAMe,EAASf,OAGjBiB,EAAgBJ,IA3CD,EA6CjBX,SAAW,SAACb,GACV,IAAM6B,EAAUC,SAAS9B,EAAEG,OAAO4B,aAAa,YAC/C,EAAK9B,SAAS,CACZuB,GAAIK,EACJlB,KAAQX,EAAEG,OAAOC,SAjDJ,EAoDnB4B,aAAe,WAAO,IACZC,EAAW,EAAKrC,MAAM8B,SAAtBO,OACR,MAAe,aAAXA,EAEA,uBACE1B,UAAU,gCACVC,QAAS,EAAKiB,eAFhB,UAIE,sBACElB,UAAU,SADZ,kDAIA,sBAAMA,UAAU,kBAKF,gBAAX0B,EAEL,sBACE1B,UAAU,wBACVC,QAAS,EAAKiB,eAFhB,mDAFC,GArEY,EAiFnBS,eAAiB,WAAO,IAAD,EACqB,EAAKtC,MAAvC0B,EADa,EACbA,cAAea,EADF,EACEA,KAAMT,EADR,EACQA,SACrBf,EAAce,EAAdf,KAAOa,EAAOE,EAAPF,GAGf,OAAIA,IAAOW,GAELb,EAEA,sBAAKf,UAAU,sBAAf,UACI,sBAAKA,UAAU,mBAAf,UACE,uBACEG,KAAK,OACLH,UAAU,eACVI,KAAK,SACLkB,QAASL,EACTpB,MAAO,EAAKE,MAAMK,KAClBE,SAAU,EAAKA,SACfuB,WAAS,IAEX,sBACE7B,UAAU,qBACVC,QAAS,EAAKe,kBAFhB,SAIE,mBAAGhB,UAAU,sBAGjB,wBACEA,UAAU,mBACVC,QAAS,kBAAM,EAAKa,gBAFtB,2CAiBF,mBAAGd,UAAU,eAAb,SACKI,KA5Hb,EAAKL,MAAQ,CACXkB,GAAI,KACJb,KAAM,GACNT,QAAS,IALM,E,qDAoIT,IAAD,SACmBO,KAAKb,MAAvB8B,EADD,EACCA,SAAUW,EADX,EACWA,IACVb,EAAeE,EAAfF,GAAIS,EAAWP,EAAXO,OAMZ,OACE,qBAAI1B,UAAuB,aAAX0B,EAAwB,uBAAyB,cAAjE,UACE,oBAAI1B,UAAU,aAAd,SACG8B,IAEH,oBACE9B,UAAU,cADZ,SAKIE,KAAKyB,mBAIT,oBAAI3B,UAAU,gBAAd,SAEIE,KAAKuB,iBAIT,qBAAIzB,UAAU,iBAAd,UACE,sBAAKA,UAAU,qBAAf,UACE,yBACEA,UAAU,mBACVC,QAAS,SAACR,GAAD,OAAO,EAAKsB,cAActB,IACnCI,MAAOoB,EAHT,UAKE,mBAAGjB,UAAU,iBACb,sBAAMA,UAAU,aAAhB,+BAIF,yBACEA,UAAU,mBACVC,QAAS,SAACR,GAAD,OAAO,EAAK2B,aAAa3B,IAFpC,UAIE,mBAAGO,UAAU,qBACb,sBAAMA,UAAU,aAAhB,6BAKJ,sBAAKA,UAAU,0BAAf,UACE,yBAAQA,UAAU,mBAAlB,UACE,mBAAGA,UAAU,gBACb,sBAAMA,UAAU,aAAhB,2CAIF,yBAAQA,UAAU,iBAAlB,UACE,mBAAGA,UAAU,6BACb,sBAAMA,UAAU,aAAhB,sD,GAhMSO,aAoORC,eA1BS,SAACT,GAEvB,MAAO,CACL6B,KAAM7B,EAAMgB,cAAca,KAC1Bb,cAAehB,EAAMgB,cAAcW,WAGZ,SAAChB,EAAUrB,GACpC,MAAO,CACL6B,eAAgB,SAACD,GACfP,EDpLsB,SAACO,GACzB,MAAO,CACHd,KAAMQ,EACNM,MCiLOL,CAAqBK,KAEhCG,aAAc,SAACH,GACbP,EDjLoB,SAACO,GACvB,MAAO,CACHd,KAAMQ,EACNM,MC8KOL,CAAmBK,KAE9BI,gBAAiB,SAACJ,GAChBP,ED5MsB,SAACO,GACzB,MAAO,CACHd,KAAMQ,EACNM,MCyMOL,CAAqBK,KAEhCH,aAAc,SAACG,EAAIb,GACjBM,EDjLoB,SAACO,EAAIb,GAC3B,MAAO,CACHD,KAAMQ,EACNM,KACAb,QC6KOQ,CAAmBK,EAAIb,KAElCY,kBAAmB,WD3MI,IAACC,EC4MtBP,ED3MK,CACHP,KAAMQ,EACNM,WC6MOT,CAA6CK,GClOtDkB,E,kDACJ,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAUR2C,cAAgB,SAACvC,GACf,IAAMW,EAAOX,EAAEG,OAAOQ,KAChBP,EAAQJ,EAAEG,OAAOC,MACvB,EAAKH,SAAL,eACGU,EAAOP,KAfO,EAkBnBoC,QAAU,WACR,EAAKvC,SAAS,CACZwC,UAAW,GACXC,aAAc,KArBC,EAwBnBC,aAAe,SAAC3C,EAAG4C,EAAIX,IAcrBU,EAXuB,EAAK/C,MAArB+C,cAOM,CACXC,KACAX,YApCe,EAwClBY,cAAgB,SAACC,GAChB,OAAOA,EAAIC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BA,QAAQ,UAAM,KAAKA,QAAQ,UAAM,MAzC5C,EAAK1C,MAAQ,CACXmC,UAAW,GACXC,aAAc,EACdO,KAAM,CACJL,GAAI,GACJX,QAAS,IAPI,E,qDA6CP,IAAD,WAG0BxB,KAAKb,MAAjCsD,EAHE,EAGFA,UAAWhD,EAHT,EAGSA,QAAS+C,EAHlB,EAGkBA,KAHlB,EAI0BxC,KAAKH,MAA/BmC,EAJA,EAIAA,UAAWC,EAJX,EAIWA,YAEdQ,IAEET,IACFS,EAAYA,EAAUC,QAAO,SAACC,EAAMC,GAClC,OAAmF,IAA5ED,EAAKzC,KAAK2C,cAAcC,OAAOC,QAAQf,EAAUa,cAAcC,YAG1EL,EAAYA,EAAUC,QAAO,SAACC,EAAMC,GAGlC,OAA+B,IAA3BvB,SAASY,GACJU,GAGoB,aAAhBA,EAAKnB,OAAwB,EAAoB,gBAAhBmB,EAAKnB,OAA2B,GAAK,KAC/DH,SAASY,MAG3BxC,IACFgD,EAAYA,EAAUC,QAAO,SAACC,GAC5B,OAAiF,IAA1EA,EAAKzC,KAAK2C,cAAcC,OAAOC,QAAQtD,EAAQoD,cAAcC,YAG1D,SAAZN,EAAKL,IACJK,EAAKQ,SAGc,IAAlBR,EAAKQ,WACPP,EAAYA,EAAUD,MAAK,SAACS,EAAGC,GAC3B,GAAI,EAAKd,cAAca,EAAE/C,KAAKiD,eAAiB,EAAKf,cAAcc,EAAEhD,KAAKiD,eACvE,OAAQ,MAIM,IAAlBX,EAAKQ,WACPP,EAAYA,EAAUD,MAAK,SAACS,EAAGC,GAC3B,GAAI,EAAKd,cAAca,EAAE/C,KAAKiD,eAAiB,EAAKf,cAAcc,EAAEhD,KAAKiD,eACvE,OAAQ,OAMG,WAAZX,EAAKL,KACTK,EAAKY,WAGgB,IAApBZ,EAAKY,aACPX,EAAYA,EAAUD,MAAK,SAACS,EAAGC,GAC3B,OAAID,EAAEzB,OAAO2B,cAAgBD,EAAE1B,OAAO2B,cAC7B,EAELF,EAAEzB,OAAO2B,cAAgBD,EAAE1B,OAAO2B,eAC5B,EAGD,MAIS,IAApBX,EAAKY,aACPX,EAAYA,EAAUD,MAAK,SAACS,EAAGC,GAC3B,OAAID,EAAEzB,OAAO2B,cAAgBD,EAAE1B,OAAO2B,eAC5B,EAENF,EAAEzB,OAAO2B,cAAgBD,EAAE1B,OAAO2B,cAC7B,EAGA,QAQjB,IAAIE,EAAeZ,EAAUa,KAAI,SAACX,EAAMC,GACtC,OAAO,cAAC,EAAD,CACGhB,IAAKgB,EAAQ,EAEb3B,SAAU0B,GADLC,MAOf,OACI,yBAAS9C,UAAU,SAAnB,SACQ,wBAAOA,UAAU,QAAjB,UACE,wBAAOA,UAAU,gBAAjB,UACE,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,aAAd,iBAGA,qBACEA,UAAU,cACVC,QAAS,SAACR,GAAD,OAAO,EAAK2C,aAAa3C,EAAG,QAAS,IAFhD,UAKE,sBAAMO,UAAU,cAAhB,0CAGA,sBAAKA,UAAU,kBAAf,UACE,sBACEA,WAA8B,IAAnB0C,EAAKQ,SAAkB,cAAgB,2BADpD,SAEI,mBAAGlD,UAAU,kBAEjB,sBACEA,UAA6B,IAAlB0C,EAAKQ,SAAiB,cAAgB,2BADnD,SAEM,mBAAGlD,UAAU,4BAEnB,sBACEA,UAA6B,IAAlB0C,EAAKQ,SAAiB,cAAgB,2BADnD,SAEE,mBAAGlD,UAAU,oCAInB,qBACEA,UAAU,gBACVC,QAAS,SAACR,GAAD,OAAO,EAAK2C,aAAa3C,EAAG,UAAW,IAFlD,UAIE,sBAAMO,UAAU,cAAhB,oCAGA,sBAAKA,UAAU,kBAAf,UACA,sBACIA,WAAgC,IAArB0C,EAAKY,WAAoB,cAAgB,2BADxD,SAEM,mBAAGtD,UAAU,kBAEjB,sBACEA,UAA+B,IAApB0C,EAAKY,WAAmB,cAAgB,2BADrD,SAEM,mBAAGtD,UAAU,4BAEnB,sBACEA,UAA+B,IAApB0C,EAAKY,WAAmB,cAAgB,2BADrD,SAEE,mBAAGtD,UAAU,oCAInB,oBAAIA,UAAU,iBAAd,+BAIF,qBAAIA,UAAU,gBAAd,UACE,oBAAIA,UAAU,eAEd,qBAAIA,UAAU,iCAAd,UACE,uBACEG,KAAK,OACLH,UAAU,sBACVI,KAAK,YACLC,YAAY,mCACZC,SAAUJ,KAAK8B,cACfnC,MAAOqC,IAET,sBACElC,UAAU,4BACVC,QAASC,KAAK+B,QAFhB,SAIE,mBAAGjC,UAAU,sBAGjB,oBAAIA,UAAU,gBAAd,SACE,4BACEI,KAAK,gBACLJ,UAAU,iBAFZ,qBAGO,eAHP,yBAIYE,KAAK8B,eAJjB,0BAME,wBAAQnC,OAAQ,EAAGG,UAAU,yBAA7B,mCAGA,wBAAQH,OAAQ,EAAGG,UAAU,yBAA7B,kDAGA,wBAAQH,MAAO,EAAGG,UAAU,yBAA5B,gDAZF,MAgBF,oBAAIA,UAAU,yBAIlB,uBAAOA,UAAU,cAAjB,SACEuD,a,GA7OJhD,aAqQLC,eAhBS,SAACT,GACvB,MAAO,CACL4C,UAAW5C,EAAM4C,UACjBhD,QAASI,EAAM0D,OACff,KAAM3C,EAAM2C,SAIW,SAAChC,EAAUrB,GACpC,MAAO,CACL+C,aAAc,SAACM,GACbhC,EFlMK,CACHP,KAAMQ,EACN+B,KEgMoBA,QAKblC,CAA6CuB,GCtQtD2B,E,kDACJ,WAAYrE,GAAQ,IAAD,8BACjB,cAAMA,IAORsE,QAAU,WACR,EAAKjE,SAAS,CACZU,KAAM,GACNsB,OAAQ,iBAXO,EAcnBkC,MAAQ,SAACnE,GACPA,EAAEoE,iBADW,IAENzD,EAAQ,EAAKL,MAAbK,KACA0D,EAAa,EAAKzE,MAAlByE,UACM,KAAT1D,EACF2D,MAAM,gEAGNC,QAAQC,IAAI,EAAKlE,OACjB+D,EAAU,EAAK/D,OACf,EAAK4D,YAxBU,EA2BnBO,SAAW,SAACzE,GAEV,IAAMW,EAAOX,EAAEG,OAAOQ,KAChBP,EAAQJ,EAAEG,OAAOC,MAEvB,EAAKH,SAAL,eAEOU,EAAQP,KAhCf,EAAKE,MAAQ,CACXK,KAAM,GACNsB,OAAQ,eAJO,E,qDAuCR,MAGgBxB,KAAKH,MAArB2B,EAHA,EAGAA,OAAQtB,EAHR,EAGQA,KACP+D,EAAkBjE,KAAKb,MAAvB8E,cACN,OACI,qBAAKnE,UAAU,UAAf,SACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,mBAAhB,2CAGA,sBACEA,UAAU,wBACVC,QAAS,kBAAMkE,KAFjB,SAIE,mBAAGnE,UAAU,sCAGjB,qBAAKA,UAAU,YAAf,SACE,uBAAMoE,OAAO,OAAOpE,UAAU,iBAA9B,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOA,UAAU,iBAAjB,4CAGA,uBACEI,KAAK,OACLD,KAAK,OACLN,MAAOO,EACPJ,UAAU,kBACVM,SAAUJ,KAAKgE,SACfrC,WAAS,OAGb,sBAAK7B,UAAU,sBAAf,UACE,uBACEG,KAAK,QACLc,GAAG,cACHb,KAAK,SACLP,MAAM,cACNG,UAAU,kBACVM,SAAUJ,KAAKgE,SACfG,QAAqB,gBAAX3C,IAEZ,uBAAO4C,QAAQ,cAAf,8CACA,uBACEnE,KAAK,QACLc,GAAG,WACHb,KAAK,SACLP,MAAM,WACNG,UAAU,kBACVM,SAAUJ,KAAKgE,SACfG,QAAqB,aAAX3C,IAEZ,uBAAO4C,QAAQ,WAAf,qDAEF,sBAAKtE,UAAU,oBAAf,UACE,wBACIG,KAAK,SACLH,UAAU,mBACVC,QAASC,KAAK0D,MAHlB,qBAKA,wBACEzD,KAAK,QACLH,UAAU,kBACVC,QAASC,KAAKyD,QAHhB,oC,GAtGGpD,aAoIRC,eAjBS,SAACT,GACvB,MAAO,CACLU,gBAAiBV,EAAMU,gBACvB8D,QAASxE,EAAMwE,YAGQ,SAAC7D,EAAUrB,GACpC,MAAO,CACL8E,cAAgB,WAChBzD,EHnHO,CACHP,KAAMQ,KGoHVmD,UAAY,SAACU,GACX9D,EHrGK,CACHP,KAAMQ,EACN4D,QGmGuBC,QAKhBhE,CAA6CkD,GChItDe,E,uKAGM,IACDhE,EAAmBP,KAAKb,MAAxBoB,gBAEP,OAEI,gCACN,qBAAKT,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,wBAAQA,UAAU,SAAlB,SACE,oBAAIA,UAAU,eAAd,+DAOR,sBAAMA,UAAU,OAAhB,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAWS,EAAkB,sBAAwB,mCAA1D,SACE,cAAC,EAAD,MAEF,qBAAKT,UAAWS,EAAkB,sBAAwB,sBAA1D,SACE,qBAAKT,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,6B,GAhCAO,aA0DHC,eAVS,SAACT,GACvB,MAAO,CACLU,gBAAiBV,EAAMU,oBAIA,SAACC,EAAUrB,GACpC,MAAO,KAGMmB,CAA6CiE,GCtD7CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCLRQ,EAAa,WACf,OAAOC,KAAKC,OAEZC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SACvCC,EAAeL,GAAc,GAmElBM,EAjEC,WAAmC,IAAlC7F,EAAiC,uDAAzB4F,EAAcE,EAAW,uCAC9C,OAAOA,EAAO1F,MACV,KAAKQ,EACD,OAAOZ,EACX,KAAKY,EAED,IAAMmF,EAAU,CACZ7E,GAAIkE,IACJ/E,KAAOyF,EAAOtB,QAAQnE,KACtBsB,OAAQmE,EAAOtB,QAAQ7C,QAK3B,OAHA3B,EAAMgG,KAAKD,GACXL,aAAaO,QAAQ,OAAQT,KAAKU,UAAUlG,IAC5CiE,QAAQC,IAAIlE,GACL,YAAIA,GACf,KAAKY,EAED,IAAMuF,EAAWnG,EAAMyD,KAAI,SAACX,EAAMC,GAC9B,OAAID,EAAK5B,KAAO4E,EAAO5E,GACZ,2BACA4B,GADP,IAEInB,OAAyB,aAAhBmB,EAAKnB,OAAyB,cAAgB,aAKpDmB,KAKf,OADA4C,aAAaO,QAAQ,OAAQT,KAAKU,UAAUC,IACrCA,EAEX,KAAKvF,EACDqD,QAAQC,IAAI4B,GACZ,IAAMM,EAAcpG,EAAM6C,QAAO,SAAAC,GAC7B,OAAOA,EAAK5B,KAAO4E,EAAO5E,MAK9B,OADAwE,aAAaO,QAAQ,OAAQT,KAAKU,UAAUE,IACrCA,EACP,KAAKxF,EAGD,IAAMyF,EAAiBrG,EAAMyD,KAAI,SAAAX,GAC7B,OAAIA,EAAK5B,KAAO4E,EAAO5E,GACb,2BACA4B,GADP,IAEIzC,KAAMyF,EAAOzF,OAITyC,KAOnB,OADA4C,aAAaO,QAAQ,OAAQT,KAAKU,UAAUG,IACrCA,EACX,QAAS,OAAOrG,EAEpB,OAAOA,GC1DI6F,EAVC,WAAmC,IAAlC7F,EAAiC,wDAAX8F,EAAW,uCAC9C,OAAOA,EAAO1F,MACV,KAAKQ,EACD,OAAQZ,EACZ,KAAKY,EAED,OADAZ,GAAQ,EAEZ,QAAS,OAAOA,ICTpB4F,EAAe,CACf/D,KAAM,KACNF,QAAQ,GA+BGkE,EA3BC,WAAmC,IAAlC7F,EAAiC,uDAAzB4F,EAAcE,EAAW,uCAC9C,OAAOA,EAAO1F,MACV,KAAKQ,EAGD,IAAM0F,EAAQ,2BACPtG,GADO,IAEV6B,KAAMiE,EAAO5E,GACbS,QAAQ,IAKZ,OAAO2E,EACX,KAAK1F,EAED,IAAM2F,EAAS,2BACRvG,GADQ,IAEX2B,QAAQ,IAKZ,OAAO4E,EACX,QAAS,OAAOvG,IC7BpB4F,EAAe,CACfvF,KAAM,GACNsB,OAAQ,eAWGkE,EATC,WAAmC,IAAlC7F,EAAiC,uDAAzB4F,EAAcE,EAAW,uCAC9C,OAAOA,EAAO1F,MACV,KAAKQ,EAGL,QACI,OAAOZ,ICDJ6F,EAPC,WAAmC,IAAlC7F,EAAiC,uDAH/B,GAGoB8F,EAAW,uCAC9C,OAAOA,EAAO1F,MACV,KAAKQ,EAEL,QAAS,OAAOZ,ICGT6F,EAPC,WAAmC,IAAlC7F,EAAiC,uDAH/B,GAGoB8F,EAAW,uCAC9C,OAAOA,EAAO1F,MACV,KAAKQ,EACD,OAAekF,EAAOlG,QAC1B,QAAS,OAAOI,ICNpB4F,EAAe,CACftD,GAAI,GACJa,UAAW,EACXI,YAAa,GAgCFsC,EA5BC,WAAmC,IAAlC7F,EAAiC,uDAAzB4F,EAAcE,EAAW,uCAC9C,OAAOA,EAAO1F,MACV,KAAKQ,EAED,GAAuB,SAAnBkF,EAAOnD,KAAKL,GACZ,OAAO,2BACAtC,GADP,IAEIsC,GAAIwD,EAAOnD,KAAKL,GAChBa,SAAUnD,EAAMmD,SAAW,EAAInD,EAAMmD,SAAW,GAAI,EACpDI,YAAa,IAGhB,GAAuB,WAAnBuC,EAAOnD,KAAKL,GACjB,OAAO,2BACAtC,GADP,IAEIsC,GAAIwD,EAAOnD,KAAKL,GAChBa,UAAW,EACXI,WAAYvD,EAAMuD,WAAa,EAAIvD,EAAMuD,WAAa,GAAI,IAGlEU,QAAQC,IAAIlE,GAKhB,QAAS,OAAOA,ICjBT6F,EATGW,YAAgB,CAC9B5D,YACAlC,kBACA8D,UACAxD,gBACAyF,kBACA/C,SACAf,SCLE+D,EAAQC,YAAYd,GAC1Be,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,MAGJI,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.a2f26937.chunk.js","sourcesContent":["export const DATA_TODOS = \"DATA_TODOS\";\r\nexport const TOGGLE_TABLE_ADD = \"TOGGLE_TABLE_ADD\";\r\nexport const CLOSE_TABLE_ADD = \"CLOSE_TABLE_ADD\";\r\nexport const TOGGLE_UPDATE = \"TOGGLE_UPDATE\";\r\nexport const CLOSE_UPDATE = \"CLOSE_UPDATE\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const UPDATE_ITEM = \"UPDATE_ITEM\";\r\nexport const QUICK_FILTER_ITEM = \"QUICK_FILTER_ITEM\";\r\nexport const SEARCH = \"SEARCH\";\r\nexport const SORT = \"SORT\";","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\nclass Controls extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword: \"\",\r\n    }\r\n  }\r\n  \r\n  onToggleForm = () => {\r\n    const {toggleTableAdd} = this.props;\r\n    // this.props.onToggleTableAdd();\r\n    // this.props.onToggleTableAdd();\r\n    toggleTableAdd()\r\n  }\r\n  onChangeSearch = (e) => {\r\n    this.setState({\r\n      keyword: e.target.value\r\n    })\r\n  }\r\n  onSearch = () => {\r\n    const {keyword} = this.state;\r\n    const {onSearch} = this.props;\r\n    onSearch(keyword)\r\n  }\r\n    render() {\r\n      // const {toggleTableAdd, displayTableAdd} = this.props;\r\n      // console.log(toggleTableAdd);\r\n      // console.log(displayTableAdd);\r\n      // console.log(this.state)\r\n        return (\r\n            <section className=\"option\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-12 col-sm-12\">\r\n                        <button \r\n                          className=\"btn btn---primary btn--blue btn--search \"\r\n                          onClick={this.onToggleForm}\r\n                        >\r\n                          <i className=\"fas fa-plus-circle\" />\r\n                          <span className=\"btn__name\">\r\n                            Thêm công việc\r\n                          </span>\r\n                        </button>\r\n                        <div className=\"option__search\">\r\n                          <input \r\n                            type=\"text\"\r\n                            name=\"fieldSearch\"\r\n                            className=\"option__search-input\"\r\n                            placeholder=\"Nhập từ khóa tìm kiếm...\" \r\n                            onChange={this.onChangeSearch}\r\n                            />\r\n                          <button \r\n                            className=\"btn btn--blue btn--primary btn--search\"\r\n                            onClick={this.onSearch}\r\n                            >\r\n                            <i className=\"fas fa-search\" />\r\n                            <span className=\"btn__name\">\r\n                              Tìm kiếm\r\n                            </span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    displayTableAdd : state.displayTableAdd\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    toggleTableAdd: () => {\r\n      dispatch(actions.toggleTableAdd());\r\n    },\r\n    onSearch: (keyword) => {\r\n      dispatch(actions.search(keyword))\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);","import * as types from \"../constants/ActionTypes\";\r\n\r\nexport const listItem = () => {\r\n    return {\r\n        type: types.DATA_TODOS\r\n    }\r\n}\r\nexport const toggleTableAdd = () => {\r\n    return {\r\n        type: types.TOGGLE_TABLE_ADD\r\n    }\r\n}\r\nexport const closeTableAdd = () => {\r\n    return {\r\n        type: types.CLOSE_TABLE_ADD\r\n    }\r\n}\r\nexport const toggleUpdate = (id) => {\r\n    return {\r\n        type: types.TOGGLE_UPDATE,\r\n        id\r\n    }\r\n}\r\nexport const closeUpdate = (id) => {\r\n    return {\r\n        type: types.CLOSE_UPDATE,\r\n        id\r\n    }\r\n}\r\nexport const addItem = (addItem) => {\r\n    return {\r\n        type: types.ADD_ITEM,\r\n        addItem,\r\n    }\r\n}\r\nexport const updateStatus = (id) => {\r\n    return {\r\n        type: types.UPDATE_STATUS,\r\n        id,\r\n    }\r\n}\r\nexport const deleteItem = (id) => {\r\n    return {\r\n        type: types.DELETE_ITEM,\r\n        id\r\n    }\r\n}\r\nexport const updateItem = (id, name ) => {\r\n    return {\r\n        type: types.UPDATE_ITEM,\r\n        id,\r\n        name    \r\n    }\r\n}\r\nexport const quickFilterItem = (filter ) => {\r\n    return {\r\n        type: types.QUICK_FILTER_ITEM,\r\n        filter   \r\n    }\r\n}\r\nexport const search = (keyword ) => {\r\n    return {\r\n        type: types.SEARCH,\r\n        keyword   \r\n    }\r\n}\r\nexport const sort = (sort ) => {\r\n    return {\r\n        type: types.SORT,\r\n        sort   \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\nclass ListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      keyword: \"\"\r\n    }\r\n  }\r\n  onUpdateItem = () => {\r\n    const {onUpdateItem, displayUpdate, onCloseUpdateItem} = this.props;\r\n    const {id, name} = this.state;\r\n    // console.log(displayUpdate);\r\n    onUpdateItem(id, name, displayUpdate);\r\n    // console.log(this.state)\r\n    onCloseUpdateItem(false);\r\n  }\r\n  onUpdateStatus = () => {\r\n    const {id} = this.props.listItem;\r\n    // console.log(\"Click\")\r\n    const {onUpdateStatus} = this.props;\r\n    // console.log(onUpdateStatus)\r\n    onUpdateStatus(id);\r\n  }\r\n  onDeleteItem = () => {\r\n    const {id} = this.props.listItem;\r\n    const {onDeleteItem} = this.props;\r\n    // console.log(\"click\")\r\n    onDeleteItem(id);\r\n    }\r\n  onCloseUpdateItem = () => {\r\n    const {displayUpdate} = this.props;\r\n    const {onCloseUpdateItem} = this.props;\r\n    onCloseUpdateItem(displayUpdate)\r\n  }\r\n    displayUpdate = (e) => {\r\n      // console.log(e.target.value)\r\n      const {id} = this.props.listItem;\r\n      const {onDisplayUpdate, listItem} = this.props;\r\n      this.setState({\r\n        id: id,\r\n        name: listItem.name\r\n      })\r\n      // console.log(listItem.name);\r\n      onDisplayUpdate(id)\r\n    }\r\n    onChange = (e) => {\r\n      const checkid = parseInt(e.target.getAttribute(\"checkid\"))\r\n      this.setState({\r\n        id: checkid,\r\n        name :  e.target.value\r\n      })\r\n    }\r\n  renderStatus = () => {\r\n    const { status } = this.props.listItem;\r\n    if (status === \"complete\") {\r\n      return (\r\n        <span \r\n          className=\"btn btn--status btn--complete\"\r\n          onClick={this.onUpdateStatus}\r\n          >\r\n          <span \r\n            className=\"btn-pc\">\r\n            Đã hoàn thành\r\n           </span>\r\n          <span className=\"btn-mobile\">\r\n          </span>\r\n        </span>\r\n      )\r\n    }\r\n    else if (status === \"notComplete\") {\r\n      return (\r\n        <span \r\n          className=\"btn btn--not-complete\"\r\n          onClick={this.onUpdateStatus}\r\n          \r\n          >\r\n                              Chưa hoàn thành\r\n                            </span>\r\n      )\r\n    }\r\n  }\r\n  renderNameItem = () => {\r\n    const { displayUpdate, byID, listItem } = this.props;\r\n    const { name , id } = listItem;\r\n    \r\n    // console.log(byID)\r\n    if (id === byID) {\r\n      // console.log(name)\r\n      if (displayUpdate) {\r\n        return (\r\n          <div className=\"table__repair-input\">\r\n              <div className=\"repair-input-box\">\r\n                <input \r\n                  type=\"text\" \r\n                  className=\"repair-input\" \r\n                  name=\"repair\"\r\n                  checkid={id}\r\n                  value={this.state.name}\r\n                  onChange={this.onChange}\r\n                  autoFocus\r\n                   />\r\n                <span \r\n                  className=\"repair-input-close\"\r\n                  onClick={this.onCloseUpdateItem}\r\n                >\r\n                  <i className=\"fas fa-times\" />\r\n                </span>\r\n              </div>\r\n              <button \r\n                className=\"btn btn--primary\"\r\n                onClick={() => this.onUpdateItem()}\r\n                >Cập nhật</button>\r\n            </div>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n            <p className=\"table__text \">\r\n                {name}\r\n            </p>\r\n        )\r\n      }\r\n      }\r\n      else {\r\n        return (\r\n            <p className=\"table__text \">\r\n                {name}\r\n            </p>\r\n        )\r\n      }\r\n   \r\n  }\r\n  render() {\r\n    const { listItem, stt } = this.props;\r\n    const { id, status } = listItem;\r\n    // console.log(status)\r\n    // console.log(displayUpdate)\r\n    // console.log(this.state)\r\n\r\n\r\n    return (\r\n      <tr className= {status === \"complete\" ? \"table__item complete\" : \"table__item\" }>\r\n        <td className=\"table__stt\">\r\n          {stt}\r\n        </td>\r\n        <td \r\n          className=\"table__name\"\r\n          \r\n          >\r\n          {\r\n            this.renderNameItem()\r\n          }\r\n          \r\n        </td>\r\n        <td className=\"table__status\">\r\n          {\r\n            this.renderStatus()\r\n          }\r\n\r\n        </td>\r\n        <td className=\"table__actions\">\r\n          <div className=\"table__actions-btn\">\r\n            <button \r\n              className=\"btn  btn--repair\"\r\n              onClick={(e) => this.displayUpdate(e)}\r\n              value={id}\r\n              >\r\n              <i className=\"fas fa-tools\" />\r\n              <span className=\"btn-mobile\">\r\n                Sửa\r\n                                </span>\r\n            </button>\r\n            <button \r\n              className=\"btn  btn--delete\"\r\n              onClick={(e) => this.onDeleteItem(e)}\r\n              >\r\n              <i className=\"fas fa-trash-alt\" />\r\n              <span className=\"btn-mobile\">\r\n                Xóa\r\n                                </span>\r\n            </button>\r\n          </div>\r\n          <div className=\"table__actions-btn none\">\r\n            <button className=\"btn  btn--update\">\r\n              <i className=\"fas fa-edit\" />\r\n              <span className=\"btn-mobile\">\r\n                Cập nhật\r\n                                </span>\r\n            </button>\r\n            <button className=\"btn  btn--back\">\r\n              <i className=\"fas fa-caret-square-left\" />\r\n              <span className=\"btn-mobile\">\r\n                Trở lại\r\n                                </span>\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state)\r\n  return {\r\n    byID: state.displayUpdate.byID,\r\n    displayUpdate: state.displayUpdate.status\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onUpdateStatus: (id) => {\r\n      dispatch(actions.updateStatus(id))\r\n    },\r\n    onDeleteItem: (id) => {\r\n      dispatch(actions.deleteItem(id));\r\n    },\r\n    onDisplayUpdate: (id) => {\r\n      dispatch(actions.toggleUpdate(id))\r\n    },\r\n    onUpdateItem: (id, name ) => {\r\n      dispatch(actions.updateItem(id, name ))\r\n    },\r\n    onCloseUpdateItem: () => {\r\n      dispatch(actions.closeUpdate())\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);\r\n","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fieldName: \"\",\r\n      fieldStatus: -1,\r\n      sort: {\r\n        by: \"\",\r\n        status: -1\r\n      }\r\n    }\r\n  }\r\n  onQuickFilter = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n  onClear = () => {\r\n    this.setState({\r\n      fieldName: \"\",\r\n      fieldStatus: -1\r\n    })\r\n  }\r\n  onHandleSort = (e, by, status) => {\r\n    // e.stopPropagation();\r\n    // const {sort, status} = this.state;\r\n    const {onHandleSort} = this.props;\r\n    // this.setState({\r\n    //   sort: {\r\n    //     by,\r\n    //     status: status + 1\r\n    //   }\r\n    // })\r\n    const sort = {\r\n      by,\r\n      status\r\n    }\r\n    onHandleSort(sort);\r\n  }\r\n   removeAccents = (str) => {\r\n    return str.normalize('NFD')\r\n              .replace(/[\\u0300-\\u036f]/g, '')\r\n              .replace(/đ/g, 'd').replace(/Đ/g, 'D');\r\n  }\r\n    render() {\r\n      // console.log(this.state)\r\n      // console.log(this.props.dataTodos);\r\n      let {dataTodos, keyword, sort} = this.props;\r\n      const {fieldName, fieldStatus} = this.state;\r\n      // console.log(sort)\r\n      if (dataTodos) {\r\n\r\n        if (fieldName) {\r\n          dataTodos = dataTodos.filter((item, index) => {\r\n            return item.name.toLowerCase().trim().indexOf(fieldName.toLowerCase().trim()) !== -1;\r\n          })\r\n        }\r\n        dataTodos = dataTodos.filter((item, index) => {\r\n          // let status = item.status === \"complete\" ? 1 : item.status === \"notComplete\" ? 0 : -1;\r\n          // return status !== parseInt(fieldStatus);\r\n          if (parseInt(fieldStatus) === -1) {\r\n            return item;\r\n          }\r\n          else {\r\n          let status = item.status === \"complete\" ? 1 : item.status === \"notComplete\" ? 0 : -1;\r\n            return status !== parseInt(fieldStatus);\r\n          }\r\n        })\r\n        if (keyword) {\r\n          dataTodos = dataTodos.filter((item) => {\r\n            return item.name.toLowerCase().trim().indexOf(keyword.toLowerCase().trim()) !== -1;\r\n          })\r\n        }\r\n      if (sort.by === \"name\") {\r\n        if(sort.sortName === -1) {\r\n\r\n        }\r\n        if (sort.sortName === 0) {     \r\n          dataTodos = dataTodos.sort((a, b) => {\r\n              if (this.removeAccents(a.name.toUpperCase()) < this.removeAccents(b.name.toUpperCase()) ) {\r\n                return -1;\r\n              }\r\n            })\r\n        }\r\n        if (sort.sortName === 1) {     \r\n          dataTodos = dataTodos.sort((a, b) => {\r\n              if (this.removeAccents(a.name.toUpperCase()) > this.removeAccents(b.name.toUpperCase()) ) {\r\n                return -1;\r\n              }\r\n              \r\n            })\r\n        }\r\n      }\r\n      else if (sort.by === \"status\") {\r\n        if(sort.sortStatus === -1) {\r\n\r\n        }\r\n        if (sort.sortStatus === 0) {     \r\n          dataTodos = dataTodos.sort((a, b) => {\r\n              if (a.status.toUpperCase() < b.status.toUpperCase() ) {\r\n                return 1;\r\n              }\r\n              if (a.status.toUpperCase() > b.status.toUpperCase() ) {\r\n                return -1;\r\n              }\r\n              else {\r\n                return 0;\r\n              }\r\n            })\r\n        }\r\n        if (sort.sortStatus === 1) {     \r\n          dataTodos = dataTodos.sort((a, b) => {\r\n              if (a.status.toUpperCase() < b.status.toUpperCase() ) {\r\n                return -1;\r\n              }\r\n              if (a.status.toUpperCase() > b.status.toUpperCase() ) {\r\n                return 1;\r\n              }\r\n              else {\r\n                return 0;\r\n              }\r\n            })\r\n        }\r\n      }\r\n  \r\n      }\r\n      \r\n      let elemListItem = dataTodos.map((item, index) => {\r\n        return <ListItem \r\n                  stt={index + 1}\r\n                  key={index}\r\n                  listItem={item}\r\n                  >\r\n                  </ListItem>\r\n      });\r\n      \r\n      \r\n        return (\r\n            <section className=\"tables\">\r\n                    <table className=\"table\">\r\n                      <thead className=\"table__header\">\r\n                        <tr className=\"table__item\">\r\n                          <td className=\"table__stt\">\r\n                            STT\r\n                          </td>\r\n                          <td \r\n                            className=\"table__name\"\r\n                            onClick={(e) => this.onHandleSort(e, \"name\", -1)}\r\n\r\n                            >\r\n                            <span className=\"table__text\">\r\n                              Tên công việc\r\n                            </span>\r\n                            <div className=\"table__icon-box\">\r\n                              <span \r\n                                className={sort.sortName === -1 ? \"table__icon\" : \"table__icon display-none\" }>\r\n                                  <i className=\"fas fa-sort\" />\r\n                              </span>\r\n                              <span \r\n                                className={sort.sortName === 0 ? \"table__icon\" : \"table__icon display-none\" }>\r\n                                    <i className=\"fas fa-sort-amount-up\" /> \r\n                              </span>\r\n                              <span \r\n                                className={sort.sortName === 1 ? \"table__icon\" : \"table__icon display-none\" }>\r\n                                <i className=\"fas fa-sort-amount-down\" /> \r\n                              </span>\r\n                            </div>\r\n                          </td>\r\n                          <td \r\n                            className=\"table__status\"\r\n                            onClick={(e) => this.onHandleSort(e, \"status\", -1)}\r\n                            >\r\n                            <span className=\"table__text\">\r\n                              Trạng thái\r\n                            </span>\r\n                            <div className=\"table__icon-box\">\r\n                            <span \r\n                                className={sort.sortStatus === -1 ? \"table__icon\" : \"table__icon display-none\" }>\r\n                                  <i className=\"fas fa-sort\" />\r\n                              </span>\r\n                              <span \r\n                                className={sort.sortStatus === 0 ? \"table__icon\" : \"table__icon display-none\" }>\r\n                                    <i className=\"fas fa-sort-amount-up\" /> \r\n                              </span>\r\n                              <span \r\n                                className={sort.sortStatus === 1 ? \"table__icon\" : \"table__icon display-none\" }>\r\n                                <i className=\"fas fa-sort-amount-down\" /> \r\n                              </span>\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"table__actions\">\r\n                            Thao tác\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"table__filter\">\r\n                          <td className=\"table__stt\">\r\n                          </td>\r\n                          <td className=\"table__filter-name table__name\">\r\n                            <input \r\n                              type=\"text\" \r\n                              className=\"table__quick-search\"\r\n                              name=\"fieldName\" \r\n                              placeholder=\"Tìm kiếm nhanh...\" \r\n                              onChange={this.onQuickFilter}\r\n                              value={fieldName}\r\n                              />\r\n                            <span \r\n                              className=\"table__quick-search-reset\"\r\n                              onClick={this.onClear}\r\n                              >\r\n                              <i className=\"fas fa-times\" />\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"table__status\">\r\n                            <select \r\n                              name=\"status-filter\" \r\n                              className=\"status-filter\"\r\n                              name=\"fieldStatus\"\r\n                              onChange={this.onQuickFilter}\r\n                              >\r\n                              <option value={-1} className=\"status-filter__options\">\r\n                                Tất cả\r\n                              </option>\r\n                              <option value={-0} className=\"status-filter__options\">\r\n                                Đã hoàn thành\r\n                              </option>\r\n                              <option value={1} className=\"status-filter__options\">Chưa hoàn\r\n                                thành</option>\r\n                            </select>\r\n                          </td>\r\n                          <td className=\"table__actions\">\r\n                          </td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"table__body\">\r\n                       {elemListItem}\r\n                        \r\n                      </tbody>\r\n                    </table>\r\n                  </section>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataTodos: state.dataTodos,\r\n    keyword: state.search,\r\n    sort: state.sort\r\n    \r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onHandleSort: (sort) => {\r\n      dispatch(actions.sort(sort))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass TableAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      status: \"notComplete\"\r\n    }\r\n  }\r\n \r\n  onReset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: \"notComplete\"\r\n    })\r\n  }\r\n  onAdd = (e) => {\r\n    e.preventDefault();\r\n    const {name} = this.state;\r\n    const {onAddItem} = this.props;\r\n    if (name === \"\") {\r\n      alert(\"Vui lòng nhập tên công việc!!\")\r\n    }\r\n    else {\r\n      console.log(this.state)\r\n      onAddItem(this.state);\r\n      this.onReset();\r\n    }\r\n  }\r\n  valueAdd = (e) => {\r\n    // const {name, status} = this.state;\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    // console.log(value)\r\n    this.setState (\r\n        {\r\n          [name] : value\r\n        }\r\n      )\r\n      \r\n  }\r\n    render() {\r\n      // console.log(this.props.displayTableAdd)\r\n      // console.log(this.state)\r\n      const {status, name} = this.state;\r\n      const { closeTableAdd } = this.props;\r\n        return (\r\n            <div className=\"add-box\">\r\n            <div className=\"add\">\r\n              <div className=\"add__header\">\r\n                <span className=\"add__header-text\">\r\n                  THÊM CÔNG VIỆC\r\n                </span>\r\n                <span \r\n                  className=\"add__header-btn-close\"\r\n                  onClick={() => closeTableAdd()}\r\n                  >\r\n                  <i className=\"fas fa-arrow-alt-circle-left\" />\r\n                </span>\r\n              </div>\r\n              <div className=\"add__menu\">\r\n                <form method=\"POST\" className=\"add__menu-form\">\r\n                  <div className=\"add__menu-input-box\">\r\n                    <label className=\"add__menu-text\">\r\n                      Tên công việc :  \r\n                    </label>\r\n                    <input \r\n                      name=\"name\"\r\n                      type=\"text\" \r\n                      value={name}\r\n                      className=\"add__menu-input\"\r\n                      onChange={this.valueAdd}\r\n                      autoFocus\r\n                       />\r\n                  </div>\r\n                  <div className=\"add__menu-radio-box\">\r\n                    <input \r\n                      type=\"radio\" \r\n                      id=\"notComplete\" \r\n                      name=\"status\" \r\n                      value=\"notComplete\" \r\n                      className=\"add__menu-radio\"\r\n                      onChange={this.valueAdd}\r\n                      checked={(status === \"notComplete\") ? true : false}\r\n                       />\r\n                    <label htmlFor=\"notComplete\">Chưa hoàn thành</label>\r\n                    <input \r\n                      type=\"radio\" \r\n                      id=\"complete\" \r\n                      name=\"status\" \r\n                      value=\"complete\"\r\n                      className=\"add__menu-radio\"\r\n                      onChange={this.valueAdd}\r\n                      checked={(status === \"complete\") ? true : false}\r\n                       />\r\n                    <label htmlFor=\"complete\">Đã hoàn thành</label>\r\n                  </div>\r\n                  <div className=\"add__menu-btn-box\">\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn--primary\"\r\n                        onClick={this.onAdd}\r\n                        >Thêm</button>\r\n                    <button \r\n                      type=\"reset\" \r\n                      className=\"btn btn--delete\"\r\n                      onClick={this.onReset}\r\n                      >Reset</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    displayTableAdd: state.displayTableAdd,\r\n    addItem: state.addItem\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    closeTableAdd : () => {\r\n    dispatch(actions.closeTableAdd());\r\n  },\r\n    onAddItem : (itemAdd) => {\r\n      dispatch(actions.addItem(itemAdd));\r\n    }\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableAdd);\r\n// export default TableAdd;","import React, { Component } from 'react';\nimport Controls from './Components/Controls';\nimport Table from './Components/Table';\nimport TableAdd from './Components/TableAdd';\nimport { connect } from \"react-redux\";\n// import demo from \"./demoredux/demo\";\n\n\nclass App extends Component {\n \n  \n  render() {\n    const {displayTableAdd} = this.props;\n    // console.log(this.props.displayTableAdd)\n    return (\n     \n        <div>\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-lg-12 col-sm-12\">\n        <header className=\"header\">\n          <h2 className=\"header__text\">\n            Quản lý công việc\n          </h2>\n        </header>\n      </div>\n    </div>\n  </div>\n  <main className=\"main\">\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className={displayTableAdd ? \" col-lg-3 col-sm-12\" : \" col-lg-3 col-sm-12 display-none\"}>\n          <TableAdd></TableAdd>\n        </div>\n        <div className={displayTableAdd ? \" col-lg-9 col-sm-12\" : \"col-lg-12 col-sm-12\" } >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-sm-12\">\n                <div className=\"right\">\n                  <Controls></Controls>\n                  <Table></Table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n  </div>\n\n\n      \n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    displayTableAdd: state.displayTableAdd,\n    \n  }\n}\nconst mapDispatchToProps = (dispatch, props) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nconst generateID = () => {\r\n    return Date.now();\r\n};\r\nvar data = JSON.parse(localStorage.getItem(\"data\"));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.DATA_TODOS:\r\n            return state;\r\n        case types.ADD_ITEM:\r\n            // console.log(state)\r\n            const newItem = {\r\n                id: generateID(),\r\n                name : action.addItem.name,\r\n                status: action.addItem.status\r\n            }\r\n            state.push(newItem);\r\n            localStorage.setItem(\"data\", JSON.stringify(state));\r\n            console.log(state);\r\n            return [...state];\r\n        case types.UPDATE_STATUS:\r\n            // console.log(action)\r\n            const stateMap = state.map((item, index) => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        status: (item.status === \"complete\") ? \"notComplete\" : \"complete\"\r\n                    }\r\n                   \r\n                }\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n            \r\n            localStorage.setItem(\"data\", JSON.stringify(stateMap));\r\n            return stateMap;\r\n\r\n        case types.DELETE_ITEM: \r\n            console.log(action)\r\n            const stateFilter = state.filter(item => {\r\n                return item.id !== action.id\r\n            })\r\n            \r\n            // console.log(stateFilter);\r\n            localStorage.setItem(\"data\", JSON.stringify(stateFilter));\r\n            return stateFilter;\r\n            case types.UPDATE_ITEM:\r\n                // console.log(action)\r\n                // console.log(state)\r\n                const stateMapUpdate = state.map(item => {\r\n                    if (item.id === action.id) {\r\n                       return {\r\n                           ...item,\r\n                           name: action.name\r\n                       }\r\n                    }\r\n                    else {\r\n                        return item\r\n                    }\r\n                    \r\n                })\r\n            //     console.log(state)\r\n            //    console.log(stateMapUpdate)\r\n            localStorage.setItem(\"data\", JSON.stringify(stateMapUpdate));\r\n            return stateMapUpdate;\r\n        default: return state\r\n    }\r\n    return state;\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\nvar initialState = false;\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.TOGGLE_TABLE_ADD:\r\n            return !state;\r\n        case types.CLOSE_TABLE_ADD: \r\n            state = false;\r\n            return state;\r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\nvar initialState = {\r\n    byID: null,\r\n    status: false \r\n}\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.TOGGLE_UPDATE:\r\n            // console.log(action)\r\n            // console.log(state.displayUpdate)\r\n            const newState = {\r\n                ...state,\r\n                byID: action.id,\r\n                status: true\r\n\r\n            }\r\n            // console.log(state)\r\n            // console.log(newState)\r\n            return newState;\r\n        case types.CLOSE_UPDATE:\r\n            \r\n            const newState1 = {\r\n                ...state,\r\n                status: false\r\n            }\r\n            // console.log(state)\r\n            // console.log(newState1)\r\n            // return state;\r\n            return newState1;\r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = {\r\n    name: \"\",\r\n    status: \"notComplete\"\r\n}\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.ADD_ITEM:\r\n            // console.log(action.addItem);\r\n            \r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\nvar initialState = '';\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.TOGGLE_UPDATE:\r\n            \r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from \"../constants/ActionTypes\";\r\nvar initialState = '';\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SEARCH:\r\n            return state = action.keyword;\r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import { bindActionCreators } from \"redux\";\r\nimport * as types from \"../constants/ActionTypes\";\r\nvar initialState = {\r\n    by: \"\",\r\n    sortName: -1,\r\n    sortStatus: -1,\r\n};\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SORT:\r\n            // console.log(action)\r\n            if (action.sort.by === \"name\") {\r\n                return {\r\n                    ...state,\r\n                    by: action.sort.by,\r\n                    sortName: state.sortName < 1 ? state.sortName + 1: -1,\r\n                    sortStatus: -1\r\n                }\r\n            }\r\n            else if (action.sort.by === \"status\") {\r\n                return {\r\n                    ...state,\r\n                    by: action.sort.by,\r\n                    sortName: -1,\r\n                    sortStatus: state.sortStatus < 1 ? state.sortStatus + 1: -1\r\n                }\r\n            }\r\n            console.log(state);\r\n            // return state;\r\n         \r\n                \r\n\r\n        default: return state;\r\n    }\r\n}\r\nexport default myReducer;","import { combineReducers } from \"redux\";\r\nimport dataTodos from \"./dataTodos\";\r\nimport displayTableAdd from \"./displayTableAdd\";\r\nimport displayUpdate from \"./displayUpdate\";\r\nimport addItem from \"./addItem\";\r\nimport quickFilterItem from \"./quickFilterItem\";\r\nimport search from \"./search\";\r\nimport sort from \"./sort\";\r\nconst myReducer = combineReducers({\r\n    dataTodos,\r\n    displayTableAdd,\r\n    addItem,\r\n    displayUpdate,\r\n    quickFilterItem,\r\n    search,\r\n    sort\r\n});\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//Store\nimport {createStore } from \"redux\";\nimport myReducer  from \"./reducers/index\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(myReducer);\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}